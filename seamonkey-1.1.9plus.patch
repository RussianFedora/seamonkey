Index: mozilla/js/src/jsapi.c
diff -u mozilla/js/src/jsapi.c:3.214.2.41 mozilla/js/src/jsapi.c:3.214.2.41.4.1
--- mozilla/js/src/jsapi.c:3.214.2.41	Fri Feb 29 21:14:16 2008
+++ mozilla/js/src/jsapi.c	Fri Apr  4 07:45:27 2008
@@ -4083,10 +4083,10 @@
     }
     fun = js_NewFunction(cx, NULL, NULL, nargs, 0, obj, funAtom);
     if (!fun)
-        goto out;
+        goto out2;
 
     /* From this point the control must flow through the label out. */
-    JS_PUSH_TEMP_ROOT_FUNCTION(cx, fun, &tvr);
+    JS_PUSH_TEMP_ROOT_OBJECT(cx, fun->object, &tvr);
     if (nargs) {
         for (i = 0; i < nargs; i++) {
             argAtom = js_Atomize(cx, argnames[i], strlen(argnames[i]), 0);
@@ -4113,12 +4113,13 @@
         if (!OBJ_DEFINE_PROPERTY(cx, obj, ATOM_TO_JSID(funAtom),
                                  OBJECT_TO_JSVAL(fun->object),
                                  NULL, NULL, JSPROP_ENUMERATE, NULL)) {
-            return NULL;
+            fun = NULL;
+            goto out;
         }
     }
+    cx->weakRoots.newborn[GCX_OBJECT] = (JSGCThing *) fun->object;
 
   out:
-    cx->weakRoots.newborn[GCX_PRIVATE] = (JSGCThing *) fun;
     JS_POP_TEMP_ROOT(cx, &tvr);
 
   out2:
Index: mozilla/js/src/jscntxt.h
diff -u mozilla/js/src/jscntxt.h:3.80.4.23 mozilla/js/src/jscntxt.h:3.80.4.23.4.1
--- mozilla/js/src/jscntxt.h:3.80.4.23	Fri Feb 15 19:36:37 2008
+++ mozilla/js/src/jscntxt.h	Fri Apr  4 07:45:27 2008
@@ -587,9 +587,6 @@
 #define JS_PUSH_TEMP_ROOT_STRING(cx,str,tvr)                                  \
     JS_PUSH_TEMP_ROOT_COMMON(cx, str, tvr, JSTVU_SINGLE, string)
 
-#define JS_PUSH_TEMP_ROOT_FUNCTION(cx,fun,tvr)                                \
-    JS_PUSH_TEMP_ROOT_COMMON(cx, fun, tvr, JSTVU_SINGLE, function)
-
 #define JS_PUSH_TEMP_ROOT_QNAME(cx,qn,tvr)                                    \
     JS_PUSH_TEMP_ROOT_COMMON(cx, qn, tvr, JSTVU_SINGLE, qname)
 
Index: mozilla/js/src/jsprvtd.h
diff -u mozilla/js/src/jsprvtd.h:3.17.20.6 mozilla/js/src/jsprvtd.h:3.17.20.6.4.1
--- mozilla/js/src/jsprvtd.h:3.17.20.6	Fri Feb 15 19:36:37 2008
+++ mozilla/js/src/jsprvtd.h	Fri Apr  4 07:45:28 2008
@@ -212,7 +212,6 @@
     jsval               value;
     JSObject            *object;
     JSString            *string;
-    JSFunction          *function;
     JSXML               *xml;
     JSXMLQName          *qname;
     JSTempValueMarker   marker;
Index: mozilla/content/base/src/nsXMLHttpRequest.cpp
diff -u mozilla/content/base/src/nsXMLHttpRequest.cpp:1.156.2.12 mozilla/content/base/src/nsXMLHttpRequest.cpp:1.156.2.12.4.1
--- mozilla/content/base/src/nsXMLHttpRequest.cpp:1.156.2.12	Tue Feb 12 21:07:00 2008
+++ mozilla/content/base/src/nsXMLHttpRequest.cpp	Thu Apr  3 21:19:51 2008
@@ -930,6 +930,18 @@
   return httpChannel;
 }
 
+inline PRBool
+IsSystemPrincipal(nsIPrincipal* aPrincipal)
+{
+  nsCOMPtr<nsIPrincipal> systemPrincipal;
+  nsresult rv = nsContentUtils::GetSecurityManager()->
+                  GetSystemPrincipal(getter_AddRefs(systemPrincipal));
+  if (NS_FAILED(rv))
+    return PR_FALSE;
+
+  return (aPrincipal == systemPrincipal);
+}
+
 
 /* noscript void openRequest (in AUTF8String method, in AUTF8String url, in boolean async, in AString user, in AString password); */
 NS_IMETHODIMP
@@ -1535,7 +1547,7 @@
   if (httpChannel) {
     httpChannel->GetRequestMethod(method); // If GET, method name will be uppercase
 
-    if (mPrincipal) {
+    if (mPrincipal && !IsSystemPrincipal(mPrincipal)) {
       nsCOMPtr<nsIURI> codebase;
       mPrincipal->GetURI(getter_AddRefs(codebase));
 
Index: mozilla/toolkit/components/url-classifier/content/listmanager.js
diff -u mozilla/toolkit/components/url-classifier/content/listmanager.js:1.1.2.14 mozilla/toolkit/components/url-classifier/content/listmanager.js:1.1.2.14.24.1
--- mozilla/toolkit/components/url-classifier/content/listmanager.js:1.1.2.14	Fri Sep  1 18:51:59 2006
+++ mozilla/toolkit/components/url-classifier/content/listmanager.js	Fri Apr  4 03:21:55 2008
@@ -552,11 +552,14 @@
     status = 500;
   }
   status = parseInt(status, 10);
-  this.requestBackoff_.noteServerResponse(status);
-
-  // Try again in a minute
-  this.currentUpdateChecker_ =
-    new G_Alarm(BindToObject(this.checkForUpdates, this), 60000);
+  var isError = this.requestBackoff_.noteServerResponse(status);
+  if (isError) {
+    // Try again in a minute.  We'll hit backoff if this is an error.  If
+    // it's not an error, we just ignore the response and try again during
+    // our regular check interval.
+    this.currentUpdateChecker_ =
+      new G_Alarm(BindToObject(this.checkForUpdates, this), 60000);
+  }
 }
 
 PROT_ListManager.prototype.QueryInterface = function(iid) {
Index: mozilla/toolkit/components/url-classifier/content/request-backoff.js
diff -u mozilla/toolkit/components/url-classifier/content/request-backoff.js:1.1.2.1 mozilla/toolkit/components/url-classifier/content/request-backoff.js:1.1.2.1.24.1
--- mozilla/toolkit/components/url-classifier/content/request-backoff.js:1.1.2.1	Sat Aug 26 22:18:24 2006
+++ mozilla/toolkit/components/url-classifier/content/request-backoff.js	Fri Apr  4 03:21:55 2008
@@ -87,10 +87,13 @@
 }
 
 /**
- * Notify this object of the last server response.  If it's an error,
+ * Notify this object of the last server response.  If it's an error, we
+ * check to see if we should trigger a backoff.
+ * @return Boolean true if this counts as an error.
  */
 RequestBackoff.prototype.noteServerResponse = function(status) {
-  if (this.isErrorStatus_(status)) {
+  var isError = this.isErrorStatus_(status);
+  if (isError) {
     var now = Date.now();
     this.errorTimes_.push(now);
 
@@ -117,6 +120,7 @@
     this.nextRequestTime_ = 0;
     this.backoffTriggered_ = false;
   }
+  return isError;
 }
 
 /**
Index: mozilla/xpfe/browser/resources/content/navigator.js
diff -u mozilla/xpfe/browser/resources/content/navigator.js:1.577.2.24 mozilla/xpfe/browser/resources/content/navigator.js:1.577.2.25
--- mozilla/xpfe/browser/resources/content/navigator.js:1.577.2.24	Sun Apr 29 21:37:26 2007
+++ mozilla/xpfe/browser/resources/content/navigator.js	Mon Mar 31 14:08:09 2008
@@ -1236,7 +1236,7 @@
                                  .getService(Components.interfaces.nsIInternetSearchService);
         var searchURL = searchDS.GetInternetSearchURL(searchEngineURI, "ABC", 0, 0, {value:0});
         if (searchURL) {
-          searchRoot = searchURL.match(/[a-z]+:\/\/[a-z.-]+/);
+          searchRoot = searchURL.match(/^[^:]+:\/\/[^?/]+/i);
           if (searchRoot) {
             openTopWin(searchRoot + "/");
             return;
Index: mozilla/xpfe/browser/resources/content/nsBrowserStatusHandler.js
diff -u mozilla/xpfe/browser/resources/content/nsBrowserStatusHandler.js:1.62.16.6 mozilla/xpfe/browser/resources/content/nsBrowserStatusHandler.js:1.62.16.7
--- mozilla/xpfe/browser/resources/content/nsBrowserStatusHandler.js:1.62.16.6	Sun Apr 29 21:37:26 2007
+++ mozilla/xpfe/browser/resources/content/nsBrowserStatusHandler.js	Mon Apr  7 13:51:27 2008
@@ -149,12 +149,6 @@
       var browser = getBrowser();
       if (browser.userTypedValue === null)
         gProxyFavIcon.setAttribute("src", aHref);
-
-      // update any bookmarks with new icon reference
-      if (!gBookmarksService)
-        gBookmarksService = Components.classes["@mozilla.org/browser/bookmarks-service;1"]
-                                      .getService(Components.interfaces.nsIBookmarksService);
-      gBookmarksService.updateBookmarkIcon(browser.currentURI.spec, aHref);
     }
   },
 
